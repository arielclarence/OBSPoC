version: "3.8"
services:
    mysql:
        image: mysql:8.4.0
        container_name: boilerplate-api-mysql
        environment:
            MYSQL_DATABASE: ${DB_DATABASE:-boilerplate}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-boilerplate}
        volumes:
            - ./docker/application/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
            - mysql_data:/var/lib/mysql
        ports:
            - ${MYSQL_PORT:-3309}:3306
        networks:
            - boilerplate_api_network
        restart: unless-stopped

    boilerplate-api:
        build:
            context: ./docker/application
            target: dev
        container_name: boilerplate-api
        ports:
            - ${NGINX_PORT:-8088}:8080
        restart: unless-stopped
        labels:
            - "traefik.http.routers.http-boilerplate-api.rule=Host(`boilerplate.bas.localhost`)"
            - "traefik.http.routers.boilerplate-api.entrypoints=websecure"
            - "traefik.http.routers.boilerplate-api.rule=Host(`boilerplate.bas.localhost`)"
            - "traefik.http.routers.boilerplate-api.tls=true"
        networks:
            - shared_network
            - boilerplate_api_network
            - local-net
        volumes:
            - ./:/var/www/html
            - ./nginx/nginx.conf:/etc/nginx/server-opts.d/nginx.conf
            - ./php-fpm/php-fpm_status.conf:/usr/local/etc/php-fpm.d/status.conf

    nginx-exporter:
        image: nginx/nginx-prometheus-exporter:latest
        command:
            - -nginx.scrape-uri=http://boilerplate-api:8080/nginx_status
        networks:
            - boilerplate_api_network

    php-fpm-exporter:
        image: ghcr.io/hipages/php-fpm_exporter:2
        container_name: php-fpm-exporter
        environment:
            PHP_FPM_SCRAPE_URI: tcp://boilerplate-api:9000/php-fpm_status
        networks:
            - boilerplate_api_network

    cloudwatch-agent:
        image: amazon/cloudwatch-agent:latest
        container_name: cloudwatch-agent
        environment:
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_REGION=${AWS_DEFAULT_REGION}
        volumes:
            - ./cloudwatch/metric-collect.json:/opt/aws/amazon-cloudwatch-agent/bin/default_linux_config.json:ro
            - ./cloudwatch/prometheus.yaml:/opt/aws/amazon-cloudwatch-agent/etc/prometheus.yaml:ro
            - ./cloudwatch/logs:/opt/aws/amazon-cloudwatch-agent/logs
            - ./cloudwatch/credentials:/root/.aws/credentials:ro
        networks:
            - boilerplate_api_network
        restart: unless-stopped


networks:
    shared_network:
        external: true
        name: bas_shared_network
    boilerplate_api_network:
        driver: bridge
    local-net:
        external: true

volumes:
    mysql_data:


